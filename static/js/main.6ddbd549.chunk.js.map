{"version":3,"sources":["components/List/List.js","components/Spinner/Spinner.js","components/MainCity/MainCity.js","components/AppHeader/AppHeader.js","utils/getCitiesFromLocalStorage.js","utils/getLocation.js","utils/saveToLocalStorage.js","utils/transformData.js","const/constants.js","utils/getWeather.js","components/Middler/Middler.js","components/SecondaryCity/SecondaryCity.js","components/CityList/CityList.js","actions.js","components/App/App.js","reducer.js","store.js","index.js"],"names":["List","wind","cloudiness","pressure","humidity","coordinates","className","Spinner","MainCity","weather","city","temp","image","error","src","alt","AppHeader","updateCity","onClick","getCitiesFromLocalStorage","state","JSON","parse","localStorage","getItem","cities","getLocation","callback","errorHandler","navigator","geolocation","getCurrentPosition","saveToLocalStorage","Array","citiesList","filter","map","setItem","stringify","transformData","data","id","name","main","toFixed","icon","speed","description","coord","lat","lon","API_BASE","getResource","url","fetch","getWeatherByCity","a","then","response","ok","json","Error","status","getWeatherByCoord","Middler","addCity","useState","text","setText","placeholder","value","onChange","event","target","preventDefault","SecondaryCity","onDeleted","i","isLoading","CityList","index","key","mainCityRequest","type","mainCitySuccess","mainCityError","cityRequest","citySuccess","cityError","cityDelete","connect","actions","props","updateMainCity","successGeoCallback","errorGeoCallback","pos","coords","latitude","longitude","catch","err","addCityToState","cityName","flag","length","forEach","toLocaleLowerCase","toLowerCase","alert","canInsert","useEffect","ls","initialStore","reducer","store","action","firstLoadingObj","citiesCopy","el","pop","createStore","ReactDOM","render","document","getElementById"],"mappings":"6qBAeeA,G,wBAZF,SAAC,GAAyD,IAAxDC,EAAuD,EAAvDA,KAAMC,EAAiD,EAAjDA,WAAYC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,YACjD,OACI,wBAAIC,UAAU,aACV,4BAAI,gEAAkB,8BAAOL,EAAP,SACtB,4BAAI,8FAAuB,8BAAOC,IAClC,4BAAI,kFAAqB,8BAAOC,EAAP,SACzB,4BAAI,wFAAsB,8BAAOC,EAAP,OAC1B,4BAAI,+FAAwB,kCAAQC,EAAR,SCIzBE,G,MAXC,kBACZ,yBAAKD,UAAU,0CACX,yBAAKA,UAAU,oBACX,8BACA,6BACI,mCCoBDE,EAtBE,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACZC,EAA4BD,EAA5BC,KAAMC,EAAsBF,EAAtBE,KAAMC,EAAgBH,EAAhBG,MAAOC,EAASJ,EAATI,MACxB,OACE,yBAAKP,UAAU,YACZO,EAAK,UACDA,GACHH,EACE,oCACE,yBAAKJ,UAAU,YACb,8BAAOI,GACP,yBAAKJ,UAAU,QACb,yBAAKQ,IAAKF,EAAOG,IAAI,KACrB,8BAAOJ,EAAP,YAGJ,kBAAC,EAASF,IACN,kBAAC,EAAD,QCRDO,G,MAXG,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAChB,OACI,4BAAQX,UAAU,cACd,kGACA,4BAAQY,QAAS,kBAAMD,MAAvB,oHCAGE,EAPmB,WAC9B,IAAMC,EAAQC,KAAKC,MAAOC,aAAaC,QAAQ,UAC/C,OAAc,OAAVJ,EACO,KACJA,EAAMK,QCAFC,MAJf,SAAqBC,EAAUC,GAC3BC,UAAUC,YAAYC,mBAAmBJ,EAAUC,ICOxCI,EARY,SAACP,GACxB,GAAGA,aAAkBQ,MAAO,CACxB,IAAMC,EAAaT,EAAOU,QAAO,SAACzB,GAAD,OAAWA,EAAKA,QAAO0B,KAAI,SAAE1B,GAAF,OAAaA,EAAKA,QAC9Ea,aAAac,QAAQ,QAAShB,KAAKiB,UAAU,CAACb,OAAQS,KAE1D,OAAOT,GCSIc,EAdO,SAACC,GACnB,MAAO,CACHC,GAAKD,EAAKC,GACV/B,KAAM8B,EAAKE,KACX/B,MAAO6B,EAAKG,KAAKhC,KAAO,QAAQiC,QAAQ,GACxChC,MAAM,oCAAD,OAAsC4B,EAAK/B,QAAQ,GAAGoC,KAAtD,WACL5C,KAAMuC,EAAKvC,KAAK6C,MAChB5C,WAAYsC,EAAK/B,QAAQ,GAAGsC,YAC5B5C,SAAUqC,EAAKG,KAAKxC,SACpBC,SAAUoC,EAAKG,KAAKvC,SACpBC,YAAY,GAAD,OAAKmC,EAAKQ,MAAMC,IAAhB,YAAuBT,EAAKQ,MAAME,O,uBCPxCC,EAAQ,gEADL,mCACK,KCAfC,EAAc,SAACC,GAAD,OAASC,MAAM,GAAD,OAAIH,GAAJ,OAAeE,KAEpCE,EAAgB,uCAAG,WAAM7C,GAAN,SAAA8C,EAAA,+EACrBJ,EAAY,KAAD,OAAM1C,IACnB+C,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAJ,iBAAoBH,EAASI,YAE1CL,MAAK,SAAAC,GAAQ,OAAInB,EAAcmB,OARR,2CAAH,sDAWhBK,EAAiB,uCAAG,WAAMd,EAAKC,GAAX,SAAAM,EAAA,+EACtBJ,EAAY,OAAD,OAAQH,EAAR,gBAAmBC,IAChCO,MAAK,SAAAC,GACF,GAAIA,EAASC,GACT,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAJ,iBAAoBH,EAASI,YAE1CL,MAAK,SAAAC,GAAQ,OAAInB,EAAcmB,OARP,2CAAH,wD,QCQfM,G,MArBC,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAAa,EACHC,mBAAS,IADN,mBACpBC,EADoB,KACdC,EADc,KAU3B,OACI,yBAAK9D,UAAU,WACX,wFACA,8BACI,2BAAO+D,YAAY,iHAAuBC,MAAOH,EAAMI,SAZ9C,SAACC,GAClBJ,EAAQI,EAAMC,OAAOH,UAYb,4BAAQpD,QAVN,SAACsD,GACXA,EAAME,iBACNT,EAAQE,GACRC,EAAQ,MAOA,cCQDO,G,YApBO,SAAC,GAA6B,IAA5BlE,EAA2B,EAA3BA,QAASmE,EAAkB,EAAlBA,UAAWC,EAAO,EAAPA,EACjCnE,EAAgCD,EAAhCC,KAAMC,EAA0BF,EAA1BE,KAAMC,EAAoBH,EAApBG,MAAOkE,EAAarE,EAAbqE,UAC1B,OACI,yBAAKxE,UAAU,iBACTwE,EACE,kBAAC,EAAD,MACA,oCACA,yBAAKxE,UAAU,iBACX,8BAAOI,GACP,yBAAKI,IAAKF,EAAOG,IAAI,KACrB,0BAAM0B,GAAG,QAAQ9B,EAAjB,WACA,4BAAQO,QAAS,kBAAM0D,EAAUC,KAAjC,MAEJ,kBAAC,EAASpE,OCVXsE,EALE,SAAC,GAAD,IAAEtD,EAAF,EAAEA,OAAQmD,EAAV,EAAUA,UAAV,OACb,yBAAKtE,UAAU,YACVmB,EAAOW,KAAI,SAAC1B,EAAMsE,GAAP,OAAgB,kBAAC,EAAD,CAAevE,QAASC,EAAMuE,IAAG,eAAUD,GAASJ,UAAWA,EAAWC,EAAGG,S,OCNpGE,EAAkB,iBAAO,CAClCC,KAAM,sBAGGC,EAAkB,SAAC1E,GAAD,MAAW,CACtCyE,KAAM,oBACNzE,SAGS2E,EAAgB,SAACxE,GAAD,MAAY,CACrCsE,KAAM,kBACNtE,UAGSyE,EAAc,iBAAO,CAC9BH,KAAM,iBAGGI,EAAc,SAAC7E,GAAD,MAAW,CAClCyE,KAAM,eACNzE,SAGS8E,EAAY,iBAAO,CAC5BL,KAAM,eAGGM,EAAa,SAACT,GAAD,MAAY,CAClCG,KAAM,cACNH,UC4DWU,eAFS,SAAC,GAAD,MAAwB,CAACjF,QAAzB,EAAEA,QAAgCgB,OAAlC,EAAWA,UAEKkE,EAAzBD,EAzEI,SAACE,GAAW,IACpBV,EAAqHU,EAArHV,gBAAiBE,EAAoGQ,EAApGR,gBAAiBC,EAAmFO,EAAnFP,cAAeC,EAAoEM,EAApEN,YAAaC,EAAuDK,EAAvDL,YAAaC,EAA0CI,EAA1CJ,UAAWC,EAA+BG,EAA/BH,WAAYhF,EAAmBmF,EAAnBnF,QAASgB,EAAUmE,EAAVnE,OAE5GoE,EAAiB,WACnBX,IACAxD,EAAYoE,EAAoBC,IAI9BD,EAAqB,SAACE,GACxB,IAAM/C,EAAM+C,EAAIC,OAAOC,SACjBhD,EAAM8C,EAAIC,OAAOE,UACvBpC,EAAkBd,EAAKC,GAClBO,MAAK,SAACjB,GAAD,OAAU4C,EAAgB5C,MAC/B4D,OAAM,SAACC,GAAD,OAAShB,EAAcgB,OAGhCN,EAAmB,WACrBxC,ENlCoB,UMmCfE,MAAK,SAACjB,GAAD,OAAU4C,EAAgB5C,MAC/B4D,OAAM,SAACC,GAAD,OAAShB,EAAcgB,OAmBhCC,EAAiB,SAACC,IAhBN,SAACA,GACf,IAAIC,GAAO,EAEX,OAAsB,IAAlB/E,EAAOgF,SACXhF,EAAOiF,SAAQ,SAAChG,GACRA,EAAKA,MAAQA,EAAKA,KAAKiG,sBAAwBJ,EAASK,cACxDJ,IAAQ,GAERK,MAAM,uBACNL,IAAQ,MAGTA,IAKHM,CAAUP,KACVjB,IACA/B,EAAiBgD,GACZ9C,MAAK,SAACjB,GACH+C,EAAY/C,MAEf4D,OAAM,SAACC,GACJb,IACAqB,MAAMR,QAatB,OARAU,qBAAU,WACN,IAAMC,EAAK7F,IACP6F,GAAIA,EAAG5E,KAAI,SAAC1B,GAAD,OAAU4F,EAAe5F,MACxCmF,MAED,IAIC,yBAAKvF,UAAU,OACX,kBAAC,EAAD,CAAWW,WAAY4E,IACvB,kBAAC,EAAD,CAAUpF,QAASA,IACnB,kBAAC,EAAD,CAASwD,QAASqC,IAClB,kBAAC,EAAD,CAAU7E,OAAQA,EAAQmD,UAAWa,Q,glBChFjD,IAAMwB,EAAe,CACjBxG,QAAS,GACTgB,OAAQ,IA6DGyF,EA1DC,WAAmC,IAAlCC,EAAiC,uDAAzBF,EAAcG,EAAW,uCAC9C,OAAQA,EAAOjC,MACX,IAAK,oBACD,OAAO,EAAP,GACOgC,EADP,CAEI1G,QAAS,KAEjB,IAAK,oBACD,OAAO,EAAP,GACO0G,EADP,CAEI1G,QAAS2G,EAAO1G,OAExB,IAAK,kBACD,OAAO,EAAP,GACOyG,EADP,CAEI1G,QAAS,CAACI,MAAOuG,EAAOvG,SAEhC,IAAK,eACD,OAAO,EAAP,GACOsG,EADP,CAEI1F,OAAO,GAAD,mBAAM0F,EAAM1F,QAAZ,CAAoB,CAACqD,WAAW,OAE9C,IAAK,eACD,IAAIuC,EAAkBF,EAAM1F,OAAOgF,OAAS,EACtCa,EAAaH,EAAM1F,OAAOU,QAAO,SAACoF,GAAD,OAASA,KAAKnF,KAAI,SAACmF,EAAIvC,GAE1D,OADIuC,EAAGzC,WAAaE,EAAQqC,IAAiBA,EAAkBrC,GACxDuC,KAIX,OAFAD,EAAWD,GAAmBD,EAAO1G,KACrCsB,EAAmBsF,GACZ,EAAP,GACOH,EADP,CAEI1F,OAAQ6F,IAGhB,IAAK,aACD,IAAID,EAAkBF,EAAM1F,OAAOgF,OAAS,EACtCa,EAAaH,EAAM1F,OAAOU,QAAO,SAACoF,GAAD,OAASA,KAAKnF,KAAI,SAACmF,EAAIvC,GAE1D,OADIuC,EAAGzC,WAAaE,EAAQqC,IAAiBA,EAAkBrC,GACxDuC,KAIX,OAFAD,EAAWE,MACXxF,EAAmBsF,GACZ,EAAP,GACOH,EADP,CAEI1F,OAAQ6F,IAGhB,IAAK,cACD,OAAO,EAAP,GACOH,EADP,CAEI1F,OAASO,EAAmBmF,EAAM1F,OAAOU,QAAO,SAACzB,EAAMsE,GAAP,OAAiBA,IAAUoC,EAAOpC,YAE1F,QACI,OAAOmC,ICxDJA,EAFDM,YAAYP,GCK1BQ,IAASC,OACL,kBAAC,IAAD,CAAUR,MAAOA,GACb,kBAAC,EAAD,OAEJS,SAASC,eAAe,W","file":"static/js/main.6ddbd549.chunk.js","sourcesContent":["import React from 'react';\r\nimport './List.css'\r\n\r\nconst List = ({wind, cloudiness, pressure, humidity, coordinates}) => {\r\n    return (\r\n        <ul className='ExtraInfo'>\r\n            <li><span>Ветер</span><span>{wind} m/s</span></li>\r\n            <li><span>Облачность</span><span>{cloudiness}</span></li>\r\n            <li><span>Давление</span><span>{pressure} hpa</span></li>\r\n            <li><span>Влажность</span><span>{humidity} %</span></li>\r\n            <li><span>Координаты:</span><span>[{coordinates}]</span></li>\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default List;","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = () => (\r\n    <div className=\"loadingio-spinner-dual-ring-aqgdafl8n7\">\r\n        <div className=\"ldio-n77olvnu3sn\">\r\n            <div/>\r\n            <div>\r\n                <div/>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport './MainCity.css';\r\nimport List from \"../List/List\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\n\r\n\r\nconst MainCity = ({weather}) => {\r\n  let {city, temp, image, error} = weather;\r\n  return (\r\n    <div className='MainCity'>\r\n      {error ?\r\n        `${error}` :\r\n        city ?\r\n          <>\r\n            <div className='MainInfo'>\r\n              <span>{city}</span>\r\n              <div className='Temp'>\r\n                <img src={image} alt=''/>\r\n                <span>{temp}℃</span>\r\n              </div>\r\n            </div>\r\n            <List {...weather}/>\r\n          </> : <Spinner/>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainCity;\r\n","import React from \"react\";\r\nimport \"./AppHeader.css\";\r\n\r\nconst AppHeader = ({updateCity}) => {\r\n    return (\r\n        <header className=\"App-header\">\r\n            <p>Погода здесь</p>\r\n            <button onClick={() => updateCity()}>\r\n                Обновить геолокацию\r\n            </button>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default AppHeader;","const getCitiesFromLocalStorage = () => {\r\n    const state = JSON.parse( localStorage.getItem('state') );\r\n    if (state === null)\r\n        return null;\r\n    return state.cities;\r\n};\r\n\r\nexport default getCitiesFromLocalStorage;","function getLocation(callback, errorHandler) {\r\n    navigator.geolocation.getCurrentPosition(callback, errorHandler);\r\n}\r\n\r\nexport default getLocation;","const saveToLocalStorage = (cities) => {\r\n    if(cities instanceof Array) {\r\n        const citiesList = cities.filter((city) => (city.city)).map(( city ) => (city.city));\r\n        localStorage.setItem('state', JSON.stringify({cities: citiesList}));\r\n    }\r\n    return cities;\r\n};\r\n\r\nexport default saveToLocalStorage;","const transformData = (data) => {\r\n    return {\r\n        id : data.id,\r\n        city: data.name,\r\n        temp: (data.main.temp - 273.15).toFixed(0),\r\n        image: `http://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png`,\r\n        wind: data.wind.speed,\r\n        cloudiness: data.weather[0].description,\r\n        pressure: data.main.pressure,\r\n        humidity: data.main.humidity,\r\n        coordinates: `${data.coord.lat},${data.coord.lon}`,\r\n    }\r\n};\r\n\r\nexport default transformData;","export const DEFAULT_CITY = 'Moscow';\r\nexport const DEFAULT_CITY2 = 'Saint Petersburg';\r\nconst API_KEY = 'b1db78919ab09f5c992f21e3c26b367c';\r\nexport const API_BASE = `https://api.openweathermap.org/data/2.5/weather?appid=${API_KEY}&`;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nconst API_KEY_1 = '90486ad8add5c0347dec8914c2a19b04';\r\nconst API_KEY_2 = '776c386c55163805cb9589e2e305b680';\r\nconst API_KEY_3 = 'a922dbf9e4f67bdf3c204274271b9d94';\r\nconst API_KEY_4 = '83aba2088f7994510d53cc41e7cbd390';\r\nconst API_KEY_5 = 'd11322bc66f6f269192225840adb11ba';\r\nconst API_KEY_6 = '5766fc2e4f4773caaf0578149231a9e2';\r\nconst API_KEY_7 = '845a76c8f22f4057845edbdc1f7ad0ce';*/\r\n","import { API_BASE } from \"../const/constants\";\r\nimport { transformData } from \"./\";\r\n\r\nconst getResource = (url) => fetch(`${API_BASE}${url}`);\r\n\r\nexport const getWeatherByCity = async(city) => {\r\n    return getResource(`q=${city}`)\r\n        .then(response => {\r\n            if (response.ok)\r\n                return response.json();\r\n            else\r\n                throw new Error(`status ${response.status}`)\r\n        })\r\n        .then(response => transformData(response));\r\n};\r\n\r\nexport const getWeatherByCoord = async(lat, lon) => {\r\n    return getResource(`lat=${lat}&lon=${lon}`)\r\n        .then(response => {\r\n            if (response.ok)\r\n                return response.json();\r\n            else\r\n                throw new Error(`status ${response.status}`)\r\n        })\r\n        .then(response => transformData(response));\r\n};","import React, {useState} from 'react';\r\nimport './Middler.css';\r\n\r\nconst Middler = ({addCity}) => {\r\n    const [text, setText] = useState('');\r\n    const handleChange = (event) => {\r\n        setText(event.target.value)\r\n    };\r\n    const click = (event) => {\r\n        event.preventDefault();\r\n        addCity(text);\r\n        setText('');\r\n    };\r\n    return (\r\n        <div className=\"Middler\">\r\n            <span>Избранное</span>\r\n            <form>\r\n                <input placeholder='Добавить новый город' value={text} onChange={handleChange}/>\r\n                <button onClick={click}>┿</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Middler;","import React from 'react';\r\nimport './SecondaryCity.css';\r\nimport List from \"../List/List\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\n\r\n\r\nconst SecondaryCity = ({weather, onDeleted, i}) => {\r\n    const {city, temp, image, isLoading} = weather;\r\n    return (\r\n        <div className='SecondaryCity'>\r\n            { isLoading ?\r\n                <Spinner/> :\r\n                <>\r\n                <div className='SecondaryInfo'>\r\n                    <span>{city}</span>\r\n                    <img src={image} alt=''/>\r\n                    <span id='temp'>{temp} ℃</span>\r\n                    <button onClick={() => onDeleted(i)}>X</button>\r\n                </div>\r\n                <List {...weather}/>\r\n                </>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SecondaryCity;\r\n","import React from 'react';\r\nimport './CityList.css'\r\nimport SecondaryCity from \"../SecondaryCity/SecondaryCity\";\r\n\r\nconst CityList = ({cities, onDeleted}) => (\r\n    <div className=\"CityList\">\r\n        {cities.map((city, index)=>(<SecondaryCity weather={city} key={`city-${index}`} onDeleted={onDeleted} i={index}/>))}\r\n    </div>\r\n);\r\nexport default CityList;","export const mainCityRequest = () => ({\r\n    type: 'MAIN_CITY_REQUEST'\r\n});\r\n\r\nexport const mainCitySuccess = (city) => ({\r\n    type: 'MAIN_CITY_SUCCESS',\r\n    city\r\n});\r\n\r\nexport const mainCityError = (error) => ({\r\n    type: 'MAIN_CITY_ERROR',\r\n    error\r\n});\r\n\r\nexport const cityRequest = () => ({\r\n    type: 'CITY_REQUEST'\r\n});\r\n\r\nexport const citySuccess = (city) => ({\r\n    type: 'CITY_SUCCESS',\r\n    city\r\n});\r\n\r\nexport const cityError = () => ({\r\n    type: 'CITY_ERROR'\r\n});\r\n\r\nexport const cityDelete = (index) => ({\r\n    type: 'CITY_DELETE',\r\n    index\r\n});\r\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport MainCity from \"../MainCity/MainCity\";\nimport AppHeader from \"../AppHeader/AppHeader\";\nimport {\n    getWeatherByCity,\n    getWeatherByCoord,\n    getLocation,\n    getCitiesFromLocalStorage\n} from \"../../utils\";\nimport Middler from \"../Middler/Middler\";\nimport { DEFAULT_CITY } from \"../../const/constants\";\nimport CityList from \"../CityList/CityList\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions\"\n\nexport const App = (props) => {\n    const {mainCityRequest, mainCitySuccess, mainCityError, cityRequest, citySuccess, cityError, cityDelete, weather, cities} = props;\n\n    const updateMainCity = () => {\n        mainCityRequest();\n        getLocation(successGeoCallback, errorGeoCallback);\n    };\n\n\n    const successGeoCallback = (pos) => {\n        const lat = pos.coords.latitude;\n        const lon = pos.coords.longitude;\n        getWeatherByCoord(lat, lon)\n            .then((data) => mainCitySuccess(data))\n            .catch((err) => mainCityError(err));\n    };\n\n    const errorGeoCallback = () => {\n        getWeatherByCity(DEFAULT_CITY)\n            .then((data) => mainCitySuccess(data))\n            .catch((err) => mainCityError(err));\n    };\n\n    const canInsert = (cityName) => {\n        let flag = true;\n        //проверка на добавление уже существующего города в избранное\n        if (cities.length === 0) return true;\n        cities.forEach((city) => {\n            if (city.city && city.city.toLocaleLowerCase() !== cityName.toLowerCase())\n                flag &= true;\n            else {\n                alert('Already on the list');\n                flag &= false;\n            }\n        });\n        return flag;\n    };\n\n\n    const addCityToState = (cityName) => {\n        if (canInsert(cityName)) {\n            cityRequest();\n            getWeatherByCity(cityName)\n                .then((data) => {\n                    citySuccess(data);\n                })\n                .catch((err) => {\n                    cityError();\n                    alert(err)\n                });\n        }\n    };\n\n    useEffect(() => {\n        const ls = getCitiesFromLocalStorage();\n        if (ls) ls.map((city) => addCityToState(city));\n        updateMainCity();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n\n    return (\n        <div className=\"App\">\n            <AppHeader updateCity={updateMainCity}/>\n            <MainCity weather={weather}/>\n            <Middler addCity={addCityToState}/>\n            <CityList cities={cities} onDeleted={cityDelete}/>\n        </div>\n    );\n};\n\nconst mapStateToProps = ({weather, cities}) => ({weather, cities});\n\nexport default connect(mapStateToProps, actions)(App);\n","import {saveToLocalStorage} from \"./utils\";\r\n\r\nconst initialStore = {\r\n    weather: {},\r\n    cities: []\r\n};\r\n\r\nconst reducer = (store = initialStore, action) => {\r\n    switch (action.type) {\r\n        case 'MAIN_CITY_REQUEST':\r\n            return {\r\n                ...store,\r\n                weather: {}\r\n            };\r\n        case 'MAIN_CITY_SUCCESS':\r\n            return {\r\n                ...store,\r\n                weather: action.city\r\n            };\r\n        case 'MAIN_CITY_ERROR':\r\n            return {\r\n                ...store,\r\n                weather: {error: action.error}\r\n            };\r\n        case 'CITY_REQUEST':\r\n            return {\r\n                ...store,\r\n                cities: [...store.cities, {isLoading: true}]\r\n            };\r\n        case 'CITY_SUCCESS': {\r\n            let firstLoadingObj = store.cities.length - 1;\r\n            const citiesCopy = store.cities.filter((el) => (el)).map((el, index) => {\r\n                if (el.isLoading && index < firstLoadingObj) firstLoadingObj = index;\r\n                return el;\r\n            });\r\n            citiesCopy[firstLoadingObj] = action.city;\r\n            saveToLocalStorage(citiesCopy);\r\n            return {\r\n                ...store,\r\n                cities: citiesCopy\r\n            };\r\n        }\r\n        case 'CITY_ERROR': {\r\n            let firstLoadingObj = store.cities.length - 1;\r\n            const citiesCopy = store.cities.filter((el) => (el)).map((el, index) => {\r\n                if (el.isLoading && index < firstLoadingObj) firstLoadingObj = index;\r\n                return el;\r\n            });\r\n            citiesCopy.pop();\r\n            saveToLocalStorage(citiesCopy);\r\n            return {\r\n                ...store,\r\n                cities: citiesCopy\r\n            };\r\n        }\r\n        case 'CITY_DELETE':\r\n            return {\r\n                ...store,\r\n                cities:  saveToLocalStorage(store.cities.filter((city, index) => index !== action.index))\r\n            };\r\n        default:\r\n            return store;\r\n    }\r\n};\r\n\r\nexport default reducer;","import { createStore } from 'redux';\r\nimport reducer from \"./reducer\";\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));"],"sourceRoot":""}